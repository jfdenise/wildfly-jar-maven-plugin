if (outcome != success) of /socket-binding-group=standard-sockets/:read-resource
/socket-binding-group=standard-sockets/:add(default-interface=public,port-offset=${jboss.socket.binding.port-offset:99})
else
/socket-binding-group=standard-sockets/:write-attribute(name=default-interface, value=public)
/socket-binding-group=standard-sockets/:write-attribute(name=port-offset, value=${jboss.socket.binding.port-offset:99})
end-if
if (outcome != success) of /socket-binding-group=standard-sockets/socket-binding=http/:read-resource
/socket-binding-group=standard-sockets/socket-binding=http/:add(interface=public)
else
/socket-binding-group=standard-sockets/socket-binding=http/:write-attribute(name=interface, value=public)
end-if
if (outcome != success) of /socket-binding-group=standard-sockets/socket-binding=https/:read-resource
/socket-binding-group=standard-sockets/socket-binding=https/:add()
end-if
if (outcome != success) of /socket-binding-group=standard-sockets/remote-destination-outbound-socket-binding=mail-snmt/:read-resource
/socket-binding-group=standard-sockets/remote-destination-outbound-socket-binding=mail-snmt/:add(host=foo,port=8081)
else
/socket-binding-group=standard-sockets/remote-destination-outbound-socket-binding=mail-snmt/:write-attribute(name=host, value=foo)
/socket-binding-group=standard-sockets/remote-destination-outbound-socket-binding=mail-snmt/:write-attribute(name=port, value=8081)
end-if
if (outcome != success) of /socket-binding-group=standard-sockets/remote-destination-outbound-socket-binding=foo2/:read-resource
/socket-binding-group=standard-sockets/remote-destination-outbound-socket-binding=foo2/:add(host=foo2,port=8082)
else
/socket-binding-group=standard-sockets/remote-destination-outbound-socket-binding=foo2/:write-attribute(name=host, value=foo2)
/socket-binding-group=standard-sockets/remote-destination-outbound-socket-binding=foo2/:write-attribute(name=port, value=8082)
end-if
if (outcome != success) of /system-property=aaa/:read-resource
/system-property=aaa/:add(value=foo)
else
/system-property=aaa/:write-attribute(name=value, value=foo)
end-if
if (outcome != success) of /system-property=bbb/:read-resource
/system-property=bbb/:add(value=bar)
else
/system-property=bbb/:write-attribute(name=value, value=bar)
end-if
if (outcome != success) of /subsystem=security/:read-resource
/subsystem=security/:add()
end-if
if (outcome != success) of /subsystem=security/security-domain=other/:read-resource
/subsystem=security/security-domain=other/:add()
end-if
if (outcome != success) of /subsystem=security/security-domain=other/authentication=classic/:read-resource
/subsystem=security/security-domain=other/authentication=classic/:add()
end-if
if (outcome != success) of /subsystem=security/security-domain=other/authentication=classic/login-module=kieLoginModule/:read-resource
/subsystem=security/security-domain=other/authentication=classic/login-module=kieLoginModule/:add(code=org.kie.security.jaas.KieLoginModule,flag=optional,module=deployment.yaml.war)
else
/subsystem=security/security-domain=other/authentication=classic/login-module=kieLoginModule/:write-attribute(name=code, value=org.kie.security.jaas.KieLoginModule)
/subsystem=security/security-domain=other/authentication=classic/login-module=kieLoginModule/:write-attribute(name=flag, value=optional)
/subsystem=security/security-domain=other/authentication=classic/login-module=kieLoginModule/:write-attribute(name=module, value=deployment.yaml.war)
end-if
if (outcome != success) of /subsystem=microprofile-config-smallrye/:read-resource
/subsystem=microprofile-config-smallrye/:add()
end-if
if (outcome != success) of /subsystem=microprofile-config-smallrye/config-source=foo/:read-resource
/subsystem=microprofile-config-smallrye/config-source=foo/:add(dir={path=/home/jdenise},ordinal=200)
else
/subsystem=microprofile-config-smallrye/config-source=foo/:write-attribute(name=dir, value={path=/home/jdenise})
/subsystem=microprofile-config-smallrye/config-source=foo/:write-attribute(name=ordinal, value=200)
end-if
if (outcome != success) of /subsystem=microprofile-opentracing-smallrye/:read-resource
/subsystem=microprofile-opentracing-smallrye/:add(default-tracer=toto)
else
/subsystem=microprofile-opentracing-smallrye/:write-attribute(name=default-tracer, value=toto)
end-if
if (outcome != success) of /subsystem=microprofile-opentracing-smallrye/jaeger-tracer=toto/:read-resource
/subsystem=microprofile-opentracing-smallrye/jaeger-tracer=toto/:add(sampler-param=30.0)
else
/subsystem=microprofile-opentracing-smallrye/jaeger-tracer=toto/:write-attribute(name=sampler-param, value=30.0)
end-if
if (outcome != success) of /subsystem=weld/:read-resource
/subsystem=weld/:add(require-bean-descriptor=true)
else
/subsystem=weld/:write-attribute(name=require-bean-descriptor, value=true)
end-if
if (outcome != success) of /subsystem=logging/:read-resource
/subsystem=logging/:add()
end-if
if (outcome != success) of /subsystem=logging/logger=com.foo/:read-resource
/subsystem=logging/logger=com.foo/:add(level=ALL)
else
/subsystem=logging/logger=com.foo/:write-attribute(name=level, value=ALL)
end-if
if (outcome != success) of /subsystem=logging/logger=com.demo/:read-resource
/subsystem=logging/logger=com.demo/:add(level=WARN)
else
/subsystem=logging/logger=com.demo/:write-attribute(name=level, value=WARN)
end-if
if (outcome != success) of /subsystem=logging/pattern-formatter=PATTERN/:read-resource
/subsystem=logging/pattern-formatter=PATTERN/:add(pattern="%d{yyyy-MM-dd HH:mm:ss,SSS} %-5p [%c] (%t) %s%e%n")
else
/subsystem=logging/pattern-formatter=PATTERN/:write-attribute(name=pattern, value="%d{yyyy-MM-dd HH:mm:ss,SSS} %-5p [%c] (%t) %s%e%n")
end-if
if (outcome != success) of /subsystem=logging/pattern-formatter=COLOR_PATTERN/:read-resource
/subsystem=logging/pattern-formatter=COLOR_PATTERN/:add(pattern="%K{level}%d{HH:mm:ss,SSS} %-5p [%c] (%t) %s%e%n")
else
/subsystem=logging/pattern-formatter=COLOR_PATTERN/:write-attribute(name=pattern, value="%K{level}%d{HH:mm:ss,SSS} %-5p [%c] (%t) %s%e%n")
end-if
if (outcome != success) of /subsystem=logging/console-handler=CONSOLE/:read-resource
/subsystem=logging/console-handler=CONSOLE/:add(level=INFO,named-formatter=COLOR_PATTERN)
else
/subsystem=logging/console-handler=CONSOLE/:write-attribute(name=level, value=INFO)
/subsystem=logging/console-handler=CONSOLE/:write-attribute(name=named-formatter, value=COLOR_PATTERN)
end-if
if (outcome != success) of /subsystem=logging/periodic-rotating-file-handler=MYFILE/:read-resource
/subsystem=logging/periodic-rotating-file-handler=MYFILE/:add(file={path=server.log},suffix=.yyyy-MM-dd,named-formatter=PATTERN)
else
/subsystem=logging/periodic-rotating-file-handler=MYFILE/:write-attribute(name=file, value={path=server.log})
/subsystem=logging/periodic-rotating-file-handler=MYFILE/:write-attribute(name=suffix, value=.yyyy-MM-dd)
/subsystem=logging/periodic-rotating-file-handler=MYFILE/:write-attribute(name=named-formatter, value=PATTERN)
end-if
if (outcome != success) of /subsystem=logging/root-logger=ROOT/:read-resource
/subsystem=logging/root-logger=ROOT/:add(handlers=[MYFILE],level=INFO)
else
/subsystem=logging/root-logger=ROOT/:write-attribute(name=level, value=INFO)
/subsystem=logging/root-logger=ROOT/:list-add(name=handlers, value=MYFILE)
end-if
if (outcome != success) of /subsystem=metrics/:read-resource
/subsystem=metrics/:add()
end-if
if (outcome != success) of /subsystem=ee/:read-resource
/subsystem=ee/:add(annotation-property-replacement=true,spec-descriptor-property-replacement=true)
else
/subsystem=ee/:write-attribute(name=annotation-property-replacement, value=true)
/subsystem=ee/:write-attribute(name=spec-descriptor-property-replacement, value=true)
end-if
if (outcome != success) of /subsystem=jca/:read-resource
/subsystem=jca/:add()
end-if
if (outcome != success) of /subsystem=jca/workmanager=foo/:read-resource
/subsystem=jca/workmanager=foo/:add(name=foo)
else
/subsystem=jca/workmanager=foo/:write-attribute(name=name, value=foo)
end-if
if (outcome != success) of /subsystem=jca/workmanager=foo/short-running-threads=foo-short/:read-resource
/subsystem=jca/workmanager=foo/short-running-threads=foo-short/:add(core-threads=50,max-threads=50,queue-length=50,keepalive-time={time=10, unit=SECONDS})
else
/subsystem=jca/workmanager=foo/short-running-threads=foo-short/:write-attribute(name=core-threads, value=50)
/subsystem=jca/workmanager=foo/short-running-threads=foo-short/:write-attribute(name=max-threads, value=50)
/subsystem=jca/workmanager=foo/short-running-threads=foo-short/:write-attribute(name=queue-length, value=50)
/subsystem=jca/workmanager=foo/short-running-threads=foo-short/:write-attribute(name=keepalive-time, value={time=10, unit=SECONDS})
end-if
if (outcome != success) of /subsystem=elytron/:read-resource
/subsystem=elytron/:add()
end-if
if (outcome != success) of /subsystem=elytron/filesystem-realm=exampleFsRealm/:read-resource
/subsystem=elytron/filesystem-realm=exampleFsRealm/:add(path=fs-realm-users,relative-to=jboss.server.config.dir)
else
/subsystem=elytron/filesystem-realm=exampleFsRealm/:write-attribute(name=path, value=fs-realm-users)
/subsystem=elytron/filesystem-realm=exampleFsRealm/:write-attribute(name=relative-to, value=jboss.server.config.dir)
end-if
if (outcome != success) of /subsystem=elytron/security-domain=exampleSD/:read-resource
/subsystem=elytron/security-domain=exampleSD/:add(realms=[{realm=exampleFsRealm}],permission-mapper=default-permission-mapper,default-realm=exampleFsRealm)
else
/subsystem=elytron/security-domain=exampleSD/:write-attribute(name=permission-mapper, value=default-permission-mapper)
/subsystem=elytron/security-domain=exampleSD/:write-attribute(name=default-realm, value=exampleFsRealm)
/subsystem=elytron/security-domain=exampleSD/:list-add(name=realms, value={realm=exampleFsRealm})
end-if
if (outcome != success) of /subsystem=elytron/http-authentication-factory=example-http-auth/:read-resource
/subsystem=elytron/http-authentication-factory=example-http-auth/:add(http-server-mechanism-factory=global,security-domain=exampleSD,mechanism-configurations=[{mechanism-name=DIGEST, mechanism-realm-configurations=[{realm-name=exampleFsRealm}]}])
else
/subsystem=elytron/http-authentication-factory=example-http-auth/:write-attribute(name=http-server-mechanism-factory, value=global)
/subsystem=elytron/http-authentication-factory=example-http-auth/:write-attribute(name=security-domain, value=exampleSD)
/subsystem=elytron/http-authentication-factory=example-http-auth/:list-add(name=mechanism-configurations, value={mechanism-name=DIGEST, mechanism-realm-configurations=[{realm-name=exampleFsRealm}]})
end-if
if (outcome != success) of /subsystem=elytron/http-authentication-factory=example-http-auth2/:read-resource
/subsystem=elytron/http-authentication-factory=example-http-auth2/:add(http-server-mechanism-factory=global,security-domain=exampleSD,mechanism-configurations=[{mechanism-name=DIGEST, mechanism-realm-configurations=[{realm-name=exampleFsRealm}]}])
else
/subsystem=elytron/http-authentication-factory=example-http-auth2/:write-attribute(name=http-server-mechanism-factory, value=global)
/subsystem=elytron/http-authentication-factory=example-http-auth2/:write-attribute(name=security-domain, value=exampleSD)
/subsystem=elytron/http-authentication-factory=example-http-auth2/:list-add(name=mechanism-configurations, value={mechanism-name=DIGEST, mechanism-realm-configurations=[{realm-name=exampleFsRealm}]})
end-if
if (outcome != success) of /subsystem=elytron/properties-realm=MyApplicationRealm/:read-resource
/subsystem=elytron/properties-realm=MyApplicationRealm/:add(groups-properties={path=application-roles.properties, relative-to=jboss.server.config.dir},users-properties={path=application-users.properties, relative-to=jboss.server.config.dir})
else
/subsystem=elytron/properties-realm=MyApplicationRealm/:write-attribute(name=groups-properties, value={path=application-roles.properties, relative-to=jboss.server.config.dir})
/subsystem=elytron/properties-realm=MyApplicationRealm/:write-attribute(name=users-properties, value={path=application-users.properties, relative-to=jboss.server.config.dir})
end-if
if (outcome != success) of /subsystem=elytron/permission-set=default-permissions/:read-resource
/subsystem=elytron/permission-set=default-permissions/:add(permissions=[{class-name=org.wildfly.transaction.client.RemoteTransactionPermission, module=org.wildfly.transaction.client, target-name=*}, {class-name=org.wildfly.transaction.client.RemoteTransactionPermission, module=org.wildfly.transaction.client, target-name=*}])
else
/subsystem=elytron/permission-set=default-permissions/:list-add(name=permissions, value={class-name=org.wildfly.transaction.client.RemoteTransactionPermission, module=org.wildfly.transaction.client, target-name=*})
/subsystem=elytron/permission-set=default-permissions/:list-add(name=permissions, value={class-name=org.wildfly.transaction.client.RemoteTransactionPermission, module=org.wildfly.transaction.client, target-name=*})
end-if
if (outcome != success) of /subsystem=elytron/permission-set=my-permissions/:read-resource
/subsystem=elytron/permission-set=my-permissions/:add(permissions=[{class-name=org.wildfly.transaction.client.RemoteTransactionPermission, module=org.wildfly.transaction.client, target-name=*}, {class-name=org.wildfly.transaction.client.RemoteTransactionPermission, module=org.wildfly.transaction.client, target-name=*}])
else
/subsystem=elytron/permission-set=my-permissions/:list-add(name=permissions, value={class-name=org.wildfly.transaction.client.RemoteTransactionPermission, module=org.wildfly.transaction.client, target-name=*})
/subsystem=elytron/permission-set=my-permissions/:list-add(name=permissions, value={class-name=org.wildfly.transaction.client.RemoteTransactionPermission, module=org.wildfly.transaction.client, target-name=*})
end-if
if (outcome != success) of /core-service=management/management-interface=http-interface/:read-resource
/core-service=management/management-interface=http-interface/:add(console-enabled=true,http-upgrade={enabled=true},constant-headers=[{path=/foo, headers=[{name=foo, value=bar}]}, {path=/foo2, headers=[{name=foo2, value=bar}]}])
else
/core-service=management/management-interface=http-interface/:write-attribute(name=console-enabled, value=true)
/core-service=management/management-interface=http-interface/:write-attribute(name=http-upgrade, value={enabled=true})
/core-service=management/management-interface=http-interface/:list-add(name=constant-headers, value={path=/foo, headers=[{name=foo, value=bar}]})
/core-service=management/management-interface=http-interface/:list-add(name=constant-headers, value={path=/foo2, headers=[{name=foo2, value=bar}]})
end-if
/core-service=management/access=authorization/:write-attribute(name=provider, value=simple)
/core-service=management/access=authorization/:write-attribute(name=use-identity-roles, value=true)
/core-service=management/access=authorization/constraint=application-classification/type=logging/classification=logger/:write-attribute(name=configured-application, value=true)
